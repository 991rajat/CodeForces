Vasiliy likes to rest after a hard work, so you may often meet him in some bar nearby. As all programmers do, he loves the famous drink "Beecola", 
which can be bought in n different shops in the city. 
It's known that the price of one bottle in the shop i is equal to xi coins.

Vasiliy plans to buy his favorite drink for q consecutive days. He knows, that on the i-th day he will be able to spent mi coins. 
Now, for each of the days he want to know in how many different shops he can buy a bottle of "Beecola".

-------------------------------------------------

Sort all the drinks in ascending order of price and then use upper bound.

upper bound returns the rightmost index that is <= key.  It is already one indexed so no need to decrease by 1.  If all the prices are greater, than it will return 0.
If all are smaller it will return n.

------------------------------------------------------------

int main()
{
    int no_of_shops;
    scanf("%d", &no_of_shops);

    vector <int> price_in_shop(no_of_shops);
    for(int i = 0; i < no_of_shops; i++)
        scanf("%d", &price_in_shop[i]);

    sort(all(price_in_shop));

    int no_of_days, budget_day_i;
    scanf("%d", &no_of_days);

    for(int i = 1; i <= no_of_days; i++)
    {
        scanf("%d", &budget_day_i);
        int no_of_eligible_shops = upper_bound(all(price_in_shop), budget_day_i) - price_in_shop.begin();

        printf("%d\n",no_of_eligible_shops); //0 indexed vector so no need to subtract 1.
    }
    return 0;
}
