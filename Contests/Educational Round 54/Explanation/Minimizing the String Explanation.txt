Let us have two strings - 

A1 A2 A3 ... An
B1 B2 B3 ... Bn

Now, A < B, if the first unequal character in A is smaller than in B. 

Let j be the first position such that A(j) =/= B(j) 

Then A < B if A(j) < B(j)

------------------

Now we go through the string given to us and remove the first character i such that S(i) > S(i + 1). 

Now, let us prove that such a string S' will be smaller than all other strings obtained by removing one character from S.


---

Case 1 - We have removed some character after i

Then both strings have the same first (i - 1) characters. 

Then the other strings will have S(i) and S' will have S(i + 1) at the i-th position. So, S' < S

---

Case 2 - We remove some character before i

Then suppose we have removed j-th character. 

Both strings have same first j - 1 characters. 

S' has A(j) and the other other string has A(j + 1)

By definition i is the first position where S(i + 1) < S(i)

This means A(j + 1) >= A(j)

So this proves that the other string cannot be smaller than S'.

--------

This completes our proof that we obtain the minimum such string by removing the first character where S(i + 1) < S(i)

-----

int main()
{
    int length;
    string S;
    cin >> length >> S;

    vector <int> is_ignored(length, false);
    for(int i = 0; i < length; i++)
    {
        if(i + 1 == length || S[i] > S[i + 1])
        {
            is_ignored[i] = true;
            break;
        }
    }

    for(int i = 0; i < length; i++)
        if(!is_ignored[i])
            cout << S[i];

    return 0;
}
