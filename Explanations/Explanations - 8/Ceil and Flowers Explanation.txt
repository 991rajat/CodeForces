Fox Ciel has some flowers: r red flowers, g green flowers and b blue flowers. She wants to use these flowers to make several bouquets. There are 4 types of bouquets:

To make a "red bouquet", it needs 3 red flowers.
To make a "green bouquet", it needs 3 green flowers.
To make a "blue bouquet", it needs 3 blue flowers.
To make a "mixing bouquet", it needs 1 red, 1 green and 1 blue flower.
Help Fox Ciel to find the maximal number of bouquets she can make.
---------------------------------------------------

I tried some strategies that didn't work ... Like, take as many mixed boquets as possible and then take the rest, and then take as many monochromatic boquets as possible
and then take the mixed boquet.

The answer requires noticing that the number of mixed boquets never needs to be more than 3. If we have 3 mixed boquets, we can think of them as 3 boquets of each colour.

So, just count how many boquets there would be if there was one mixed boquet, two mixed boquets and no mixed boquets.

--------------------------------------------------------

#define min_3(a, b, c) min(a, min(b, c) )
#define max_3(a, b, c) max(a, max(b, c) )

using namespace std;

int main()
{
    int green, red, blue;
    scanf("%d %d %d",&red, &green, &blue);

    int one_mixed_boquet = 0, two_mixed_boquet = 0, no_mixed_boquet;

    no_mixed_boquet = red/3 + green/3 + blue/3;

    if(min_3(red,green, blue) >= 1)
        one_mixed_boquet = 1 + (red - 1)/3 + (green - 1)/3 + (blue - 1)/3;
    if(min_3(red, green, blue) >= 2)
        two_mixed_boquet = 2 + (red - 2)/3 + (green - 2)/3 + (blue - 2)/3;

    printf("%d\n",max_3(no_mixed_boquet, two_mixed_boquet, one_mixed_boquet));
    return 0;
}