
The smallest composite number is 4. 

If a number is a multiple of 4, then we can write it as a series of 4. 
We can't do better since if we used another composite number, we'd have to reduce the number of summands

What if n = 1 (mod 4) What is the smallest number = 1 (mod 4) that is composite ? 9

1 and 5 cannot be written as sum of composites.

n = 1 (mod 4)
So, we write it as 9 + (n - 9), (n - 9) can be written as a series of 4s.

n = 2 (mod 4)
Similarly, 6 + (n - 6) 

n = 3 (mod 4)
And 15 + (n - 15) = (9 + 6) + (n - 15)

Now, this completes our proof that every composite number can be written as 

n = 4a + 6b + 9c.

Fact 1 - Every composite integer can be written as n = 4a + 6b + 9c

Now, we want to maximise the number of summands. Let's say for sum n, we use a composite number m, other than 4, 6 and 9.

Using the same process for m, we can replace m with 4s, 6s and 9s and do better.

Fact 2 - This proves that the maximum summands of n will have ONLY 4s, 6s and 9s.

Fact 3 - When n has the maximum number of summands, there will be at most one 6 and one 9.

6 + 6 = 4 + 4 + 4
9 + 9 = 6 + 6 + 6 = 4 + 4 + 4 + 6

It is never optimal to use more than one 6 or one 9 in the summation.

------------------------------------------------------

int main()
{
    int no_of_queries;
    scanf("%d", &no_of_queries);

    while(no_of_queries--)
    {
        int n;
        scanf("%d", &n);

        int no_of_parts = -1;

        if( !(n <= 3 || n == 5 || n == 7 || n == 11) )
        {
            switch(n%4)
            {
                case 0: no_of_parts = n/4; break;
                case 1: no_of_parts = (n - 9)/4 + 1; break;
                case 2: no_of_parts = (n - 6)/4 + 1; break;
                case 3: no_of_parts = (n - 15)/4 + 2; break;
            }
        }

        printf("%d\n", no_of_parts);
    }
    return 0;
}
