Constraints are too big too simulate. The main observation is that if 

a >= 2b, 

Then, we will keep subtracting a with 2b, till a < 2b. 

In other words, a = a (mod 2b)

This is similar to the Euclidean GCD algorithm. A very beautiful problem, and a very beautiful logic.

----------------------------------------------------------------------------------------------------------

int main()
{
    long long a, b;
    cin >> a >> b;

    while(a != 0 && b != 0 && (a >= 2*b || b >= 2*a))
    {
        if(a >= 2*b)
        {
            a %= (2*b);
        }
        else if(b >= 2*a)
        {
            b %= (2*a);
        }
    }

    cout << a << " " << b;
    return 0;
}
