If Array X is the answer, then it must satisfy this property -  

 X[i (mod k)] = A[i + 1] - A[i]

For every i, we will need to check that X[i (mod k)] satisfies this property. 

One way of doing this is constructing an array where 

X[i] = A[i + 1] - A[i]

If X[i (mod k)] = A[i + 1] - A[i], 

Then A[i + 1] - A[i] = A[j + 1] - A[j]

if i = j (mod k)

-----------------

Then, we will check here if 

X[0] = X[k] = X[2k] = X[3k]
X[1] = X[k + 1] = X[2k + 1] = X[3k + 1]
X[2] = X[k + 2] = X[2k + 2] = X[3k + 2]
X[3] = X[k + 3] = X[2k + 3] = X[3k + 3]

and so on


-------------------

We go through all numbers from 1 to N and check which lengths are possible. 

vector <int> answer;
    for(int i = 1; i <= no_of_elements; i++)
    {
        if(is_possible(X, i))
        {
            answer.push_back(i);
        }
    }

------------------

This is how we check if it is possible. 

int is_possible(vector <int> &A, int k)
{
    for(int i = 1; i < A.size(); i++)
    {
        if(A[i] != A[(i%k)])
            return false;
    }

    return true;
}